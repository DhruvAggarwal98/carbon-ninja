{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport { CameraType, PermissionStatus } from \"./Camera.types\";\nimport { canGetUserMedia, isBackCameraAvailableAsync, isFrontCameraAvailableAsync } from \"./WebUserMediaManager\";\n\nfunction getUserMedia(constraints) {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || function () {\n    var error = new Error('Permission unimplemented');\n    error.code = 0;\n    error.name = 'NotAllowedError';\n    throw error;\n  };\n\n  return new Promise(function (resolve, reject) {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nexport default {\n  get name() {\n    return 'ExponentCameraManager';\n  },\n\n  get Type() {\n    return {\n      back: 'back',\n      front: 'front'\n    };\n  },\n\n  get FlashMode() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      torch: 'torch'\n    };\n  },\n\n  get AutoFocus() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      singleShot: 'singleShot'\n    };\n  },\n\n  get WhiteBalance() {\n    return {\n      auto: 'auto',\n      continuous: 'continuous',\n      manual: 'manual'\n    };\n  },\n\n  get VideoQuality() {\n    return {};\n  },\n\n  get VideoStabilization() {\n    return {};\n  },\n\n  isAvailableAsync: function isAvailableAsync() {\n    return _regeneratorRuntime.async(function isAvailableAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", canGetUserMedia());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  takePicture: function takePicture(options, camera) {\n    return _regeneratorRuntime.async(function takePicture$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(camera.takePicture(options));\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  pausePreview: function pausePreview(camera) {\n    return _regeneratorRuntime.async(function pausePreview$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(camera.pausePreview());\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  resumePreview: function resumePreview(camera) {\n    return _regeneratorRuntime.async(function resumePreview$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(camera.resumePreview());\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getAvailableCameraTypesAsync: function getAvailableCameraTypesAsync() {\n    var devices, types;\n    return _regeneratorRuntime.async(function getAvailableCameraTypesAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(!canGetUserMedia() || !navigator.mediaDevices.enumerateDevices)) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", []);\n\n          case 2:\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(navigator.mediaDevices.enumerateDevices());\n\n          case 4:\n            devices = _context5.sent;\n            _context5.t0 = _regeneratorRuntime;\n            _context5.t1 = Promise;\n            _context5.next = 9;\n            return _regeneratorRuntime.awrap(isFrontCameraAvailableAsync(devices));\n\n          case 9:\n            _context5.t2 = _context5.sent;\n\n            if (!_context5.t2) {\n              _context5.next = 12;\n              break;\n            }\n\n            _context5.t2 = CameraType.front;\n\n          case 12:\n            _context5.t3 = _context5.t2;\n            _context5.next = 15;\n            return _regeneratorRuntime.awrap(isBackCameraAvailableAsync());\n\n          case 15:\n            _context5.t4 = _context5.sent;\n\n            if (!_context5.t4) {\n              _context5.next = 18;\n              break;\n            }\n\n            _context5.t4 = CameraType.back;\n\n          case 18:\n            _context5.t5 = _context5.t4;\n            _context5.t6 = [_context5.t3, _context5.t5];\n            _context5.t7 = _context5.t1.all.call(_context5.t1, _context5.t6);\n            _context5.next = 23;\n            return _context5.t0.awrap.call(_context5.t0, _context5.t7);\n\n          case 23:\n            types = _context5.sent;\n            return _context5.abrupt(\"return\", types.filter(Boolean));\n\n          case 25:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getAvailablePictureSizes: function getAvailablePictureSizes(ratio, camera) {\n    return _regeneratorRuntime.async(function getAvailablePictureSizes$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(camera.getAvailablePictureSizes(ratio));\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getPermissionsAsync: function getPermissionsAsync() {\n    var _navigator, _navigator$permission;\n\n    var _await$navigator$perm, state;\n\n    return _regeneratorRuntime.async(function getPermissionsAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if ((_navigator = navigator) != null && (_navigator$permission = _navigator.permissions) != null && _navigator$permission.query) {\n              _context7.next = 2;\n              break;\n            }\n\n            throw new UnavailabilityError('expo-camera', 'navigator.permissions API is not available');\n\n          case 2:\n            _context7.next = 4;\n            return _regeneratorRuntime.awrap(navigator.permissions.query({\n              name: 'camera'\n            }));\n\n          case 4:\n            _await$navigator$perm = _context7.sent;\n            state = _await$navigator$perm.state;\n            _context7.t0 = state;\n            _context7.next = _context7.t0 === 'prompt' ? 9 : _context7.t0 === 'granted' ? 10 : _context7.t0 === 'denied' ? 11 : 12;\n            break;\n\n          case 9:\n            return _context7.abrupt(\"return\", {\n              status: PermissionStatus.UNDETERMINED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: false\n            });\n\n          case 10:\n            return _context7.abrupt(\"return\", {\n              status: PermissionStatus.GRANTED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: true\n            });\n\n          case 11:\n            return _context7.abrupt(\"return\", {\n              status: PermissionStatus.DENIED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: false\n            });\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  requestPermissionsAsync: function requestPermissionsAsync() {\n    var message;\n    return _regeneratorRuntime.async(function requestPermissionsAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return _regeneratorRuntime.awrap(getUserMedia({\n              video: true\n            }));\n\n          case 3:\n            return _context8.abrupt(\"return\", {\n              status: PermissionStatus.GRANTED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: true\n            });\n\n          case 6:\n            _context8.prev = 6;\n            _context8.t0 = _context8[\"catch\"](0);\n            message = _context8.t0.message;\n\n            if (!(message === 'Permission dismissed')) {\n              _context8.next = 13;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", {\n              status: PermissionStatus.UNDETERMINED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: false\n            });\n\n          case 13:\n            return _context8.abrupt(\"return\", {\n              status: PermissionStatus.DENIED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: false\n            });\n\n          case 14:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  }\n};","map":{"version":3,"sources":["../src/ExponentCameraManager.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport {\n  CameraCapturedPicture,\n  CameraPictureOptions,\n  CameraType,\n  PermissionResponse,\n  PermissionStatus,\n} from './Camera.types';\nimport { ExponentCameraRef } from './ExponentCamera.web';\nimport {\n  canGetUserMedia,\n  isBackCameraAvailableAsync,\n  isFrontCameraAvailableAsync,\n} from './WebUserMediaManager';\n\nfunction getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n\n  // First get ahold of the legacy getUserMedia, if present\n  const getUserMedia =\n    navigator.getUserMedia ||\n    (navigator as any).webkitGetUserMedia ||\n    (navigator as any).mozGetUserMedia ||\n    function() {\n      const error: any = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentCameraManager';\n  },\n  get Type() {\n    return {\n      back: 'back',\n      front: 'front',\n    };\n  },\n  get FlashMode() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      torch: 'torch',\n    };\n  },\n  get AutoFocus() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      singleShot: 'singleShot',\n    };\n  },\n  get WhiteBalance() {\n    return {\n      auto: 'auto',\n      continuous: 'continuous',\n      manual: 'manual',\n    };\n  },\n  get VideoQuality() {\n    return {};\n  },\n  get VideoStabilization() {\n    return {};\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    return canGetUserMedia();\n  },\n  async takePicture(\n    options: CameraPictureOptions,\n    camera: ExponentCameraRef\n  ): Promise<CameraCapturedPicture> {\n    return await camera.takePicture(options);\n  },\n  async pausePreview(camera: ExponentCameraRef): Promise<void> {\n    await camera.pausePreview();\n  },\n  async resumePreview(camera: ExponentCameraRef): Promise<void> {\n    return await camera.resumePreview();\n  },\n  async getAvailableCameraTypesAsync(): Promise<string[]> {\n    if (!canGetUserMedia() || !navigator.mediaDevices.enumerateDevices) return [];\n\n    const devices = await navigator.mediaDevices.enumerateDevices();\n\n    const types: (string | null)[] = await Promise.all([\n      (await isFrontCameraAvailableAsync(devices)) && CameraType.front,\n      (await isBackCameraAvailableAsync()) && CameraType.back,\n    ]);\n\n    return types.filter(Boolean) as string[];\n  },\n  async getAvailablePictureSizes(ratio: string, camera: ExponentCameraRef): Promise<string[]> {\n    return await camera.getAvailablePictureSizes(ratio);\n  },\n  /* async getSupportedRatios(camera: ExponentCameraRef): Promise<string[]> {\n    // TODO: Support on web\n  },\n  async record(\n    options?: CameraRecordingOptions,\n    camera: ExponentCameraRef\n  ): Promise<{ uri: string }> {\n    // TODO: Support on web\n  },\n  async stopRecording(camera: ExponentCameraRef): Promise<void> {\n    // TODO: Support on web\n  }, */\n  async getPermissionsAsync(): Promise<PermissionResponse> {\n    if (!navigator?.permissions?.query) {\n      throw new UnavailabilityError('expo-camera', 'navigator.permissions API is not available');\n    }\n\n    const { state } = await navigator.permissions.query({ name: 'camera' });\n    switch (state) {\n      case 'prompt':\n        return {\n          status: PermissionStatus.UNDETERMINED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false,\n        };\n      case 'granted':\n        return {\n          status: PermissionStatus.GRANTED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: true,\n        };\n      case 'denied':\n        return {\n          status: PermissionStatus.DENIED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false,\n        };\n    }\n  },\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    try {\n      await getUserMedia({\n        video: true,\n      });\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true,\n      };\n    } catch ({ message }) {\n      // name: NotAllowedError\n      // code: 0\n      if (message === 'Permission dismissed') {\n        return {\n          status: PermissionStatus.UNDETERMINED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false,\n        };\n      } else {\n        // TODO: Bacon: [OSX] The system could deny access to chrome.\n        // TODO: Bacon: add: { status: 'unimplemented' }\n        return {\n          status: PermissionStatus.DENIED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false,\n        };\n      }\n    }\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}