apiVersion: v1
kind: Template
metadata:
  name: call-for-code-template
  annotations:
    description: "Description"
    iconClass: "icon-python"
    tags: "python,mariadb"
parameters:
- name: NAME
  required: yes
- name: MYSQL_USERNAME
  required: no
- name: MYSQL_PASSWORD
  required: no
- name: MYSQL_DATABASE
  required: yes
- name: BRANCH
  required: yes
  description: branch of git repo to use.  
objects:
#- apiVersion: v1
#  kind: Service
#  metadata:
#    labels:
#      app: mariadb
#    name: mariadb
#  spec:
#    ports:
#    - name: 3306-tcp
#      port: 3306
#      protocol: TCP
#      targetPort: 3306
#    selector:
#      app: mariadb
#      deploymentconfig: mariadb        
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    ports:
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: "${NAME}"
          deploymentconfig: "${NAME}"
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: "${MYSQL_DATABASE}"
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: pass
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: user
          image: "image-registry.openshift-image-registry.svc:5000/${NAME}/call-for-code-git"
          imagePullPolicy: Always
          name: "${NAME}"
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
          namespace: "${NAME}"
        lastTriggeredImage: "image-registry.openshift-image-registry.svc:5000/${NAME}/call-for-code-git"
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /flask
      git:
        ref: "${BRANCH}"
        uri: https://github.com/jtorcass/call-for-code.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.8-ubi7
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - generic:
        secretReference:
          name: "${NAME}-generic-webhook-secret"
      type: Generic
    - github:
        secretReference:
          name: "${NAME}-github-webhook-secret"
      type: GitHub
    - imageChange:
        lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/python
      type: ImageChange
    - type: ConfigChange
  status:
    lastVersion: 1
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: "image-registry.openshift-image-registry.svc:5000/${NAME}/call-for-code-git"
    publicDockerImageRepository: "default-route-openshift-image-registry.apps.shared-na46.openshift.opentlc.com/${NAME}/call-for-code-git"
    tags:
    - items:
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: mariadb-base
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: registry.redhat.io/rhel8/mariadb-103
      generation: 1
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
#- apiVersion: apps.openshift.io/v1
#  kind: DeploymentConfig
#  metadata:
#    annotations:
#      openshift.io/generated-by: OpenShiftNewApp
#    creationTimestamp: "2021-05-26T21:12:46Z"
#    generation: 2
#    labels:
#      app: mariadb
#    name: mariadb
#  spec:
#    replicas: 1
#    revisionHistoryLimit: 10
#    selector:
#      app: mariadb
#      deploymentconfig: mariadb
#    strategy:
#      activeDeadlineSeconds: 21600
#      resources: {}
#      rollingParams:
#        intervalSeconds: 1
#        maxSurge: 25%
#        maxUnavailable: 25%
#        timeoutSeconds: 600
#        updatePeriodSeconds: 1
#      type: Rolling
#    template:
#      metadata:
#        annotations:
#          openshift.io/generated-by: OpenShiftNewApp
#        creationTimestamp: null
#        labels:
#          app: mariadb
#          deploymentconfig: mariadb
#      spec:
#        containers:
#        - env:
#          - name: MYSQL_DATABASE
#            value: "${MYSQL_DATABASE}"
#               - name: MYSQL_PASSWORD
#            valueFrom:
#              secretKeyRef:
#                name: db-secret
#                key: pass
#          - name: MYSQL_USER
#            valueFrom:
#              secretKeyRef:
#                name: db-secret
#                key: user
#          image: registry.redhat.io/rhel8/mariadb-103
#          imagePullPolicy: Always
#          name: mariadb
#          ports:
#          - containerPort: 3306
#            protocol: TCP
#          resources: {}
#          terminationMessagePath: /dev/termination-log
#          terminationMessagePolicy: File
#        dnsPolicy: ClusterFirst
#        restartPolicy: Always
#        schedulerName: default-scheduler
#        securityContext: {}
#        terminationGracePeriodSeconds: 30
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      contextDir: /flask
      git:
        ref: "${BRANCH}"
        uri: https://github.com/jtorcass/call-for-code.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: image-registry.openshift-image-registry.svc:5000/openshift/python
      type: Source
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: mariadb
    name: mariadb
  spec:
    ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      app: mariadb
      deploymentconfig: mariadb
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: mariadb
    name: mariadb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: mariadb
      deploymentconfig: mariadb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: mariadb
          deploymentconfig: mariadb
      spec:
        containers:
        - image: "image-registry.openshift-image-registry.svc:5000/${NAME}/mariadb"
          imagePullPolicy: Always
          name: mariadb
          ports:
          - containerPort: 3306
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - mariadb
        from:
          kind: ImageStreamTag
          name: mariadb:latest
        lastTriggeredImage: "image-registry.openshift-image-registry.svc:5000/${NAME}/mariadb"
      type: ImageChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: mariadb
    name: mariadb
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: "image-registry.openshift-image-registry.svc:5000/${NAME}/mariadb"
    publicDockerImageRepository: "default-route-openshift-image-registry.apps.shared-na46.openshift.opentlc.com/${NAME}/mariadb"
    tags:
    - items:
      tag: latest
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: mariadb
    name: mariadb
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: mariadb:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: oc
      git:
        ref: "${BRANCH}"
        uri: https://github.com/jtorcass/call-for-code.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: mariadb-base:latest
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: tkh4NrjOyS-v0vVezl7c
      type: GitHub
    - generic:
        secret: 3PjeksJgIV5G8-RgtCyg
      type: Generic
    - type: ConfigChange
    - imageChange:
        lastTriggeredImageID: registry.redhat.io/rhel8/mariadb-103
      type: ImageChange
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    labels:
      app: mariadb
      buildconfig: mariadb
    name: mariadb
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: mariadb:latest
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      contextDir: oc
      git:
        ref: "${BRANCH}"
        uri: https://github.com/jtorcass/call-for-code.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: registry.redhat.io/rhel8/mariadb-103
      type: Docker
